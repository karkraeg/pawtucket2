#  _                                                 __
# | |                                                / _|
# | |__  _ __ _____      _____  ___   ___ ___  _ __ | |_
# | '_ \| '__/ _ \ \ /\ / / __|/ _ \ / __/ _ \| '_ \|  _|
# | |_) | | | (_) \ V  V /\__ \  __/| (_| (_) | | | | |
# |_.__/|_|  \___/ \_/\_/ |___/\___(_)___\___/|_| |_|_|
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Browse configuration file
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# ICS Pawtucket
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# number of hits to be loaded per page/ajax load
defaultHitsPerBlock = 36

# number of seconds to keep cached browses around
# set to 0 to disable caching (standardwert 86400)
cache_timeout = 86400

# --------------------------------------------------------------------

# Configuration for object browse
ca_objects = {
    show_all_for_no_criteria_browse = 1,
	name = _("Softwareobjekte"),
	facets = {
        years_facet = {
            type = normalizedDates,
			relative_to = ca_occurrences,
            element_code = work_date,
            normalization = year,
            group_mode = none,
			sort = DESC,
            label_singular = _("Year"),
            label_plural = _("Years"),
            description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),
        },
		thema_facet = {
			type = authority,
			relative_to = ca_occurrences,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
            restrict_to_types = [werk],
			group_mode = hierarchical,
            show_hierarchy = 1,
            order_by_label_fields = 1,
            hierarchical_delimiter = &nbsp;⬅&nbsp;,
            restrict_to_relationship_types = [thema],
			label_singular = _("Relation to theme"),
			label_plural = _("Relation to themes")
		},
        zeitbezug = {
			type = authority,
			relative_to = ca_occurrences,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
            restrict_to_types = [werk],
			group_mode = hierarchical,
            show_hierarchy = 1,
            order_by_label_fields = 1,
            hierarchical_delimiter = &nbsp;⬅&nbsp;,
            restrict_to_relationship_types = [zeit],
			label_singular = _("Relation to time"),
			label_plural = _("Relations to time")
		},
        personenbezug = {
			type = authority,
			relative_to = ca_occurrences,
			table = ca_list_items,
            relationship_table = ca_occurrences_x_vocabulary_terms,
            restrict_to_types = [werk],
			group_mode = hierarchical,
            show_hierarchy = 1,
            order_by_label_fields = 1,
            hierarchical_delimiter = &nbsp;⬅&nbsp;,
            restrict_to_relationship_types = [person],
			label_singular = _("Relation to person"),
			label_plural = _("Relation to persons")
		},
		system = {
			type = attribute,
			element_code = systemangabe,
            group_mode = none,
			label_singular = _("System"),
			label_plural = _("Systems")
		},
		sprache = {
			type = attribute,
			element_code = sprachen,
            group_mode = none,
			label_singular = _("Language"),
			label_plural = _("Languages")
		},
		publisher = {
			type = attribute,
			element_code = publisher,
            group_mode = none,
			label_singular = _("Publisher"),
			label_plural = _("Publisher")
		},
        # werke_facet = {
        #     type = authority,
        #     table = ca_occurrences,
        #     generate_facets_for_types = 0,
        #     relationship_table = ca_occurrences_x_occurrences,
        #     restrict_to_types = [werk],
        #     individual_group_display = 1,
        #     order_by_label_fields = [name],
        #     group_mode = alphabetical,
        #     show_all_when_first_facet = 0,
        #     label_singular = _("Werk"),
        #     label_plural = _("Werke"),
        #     description = _(""),
        # }
	}
}

# --------------------------------------------------------------------

# Configuration for occurrence browse
ca_occurrences = {
	name = _("Werke und Werkversionen"),
	facets = {
		object_facet = {
			type = authority,
			table = ca_occurrences.related,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("Softwareobjekt"),
			label_plural = _("Softwareobjekte")
		},
		years_facet = {
            type = normalizedDates,
            element_code = work_date,
            normalization = year,
            group_mode = none,
            label_singular = _("Jahr"),
            label_plural = _("Jahre"),
            description = _("Find objects according to associated dates."),
        },
        entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],

			group_mode = alphabetical,

			order_by_label_fields = [surname, forename, middlename],

			indefinite_article = an,
			label_singular = _("Entität"),
			label_plural = _("Entitäten")
		},
        titel = {
            type = label,
            preferred_labels_only = 1,
            label_singular = _("Titel"),
            label_plural = _("Titel"),
            description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),
        },
		system = {
			type = attribute,
			element_code = systemangabe,
            group_mode = none,
			label_singular = _("System"),
			label_plural = _("Systeme")
		},
		thema = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_relationship_types = [thema],

			group_mode = hierarchical,

			label_singular = _("Themenbezug"),
			label_plural = _("Themenbezüge")
		},
		zeit = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_relationship_types = [zeit],

			group_mode = none,

			label_singular = _("Zeitbezug"),
			label_plural = _("Zeitbezüge")
		},
		ort = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_relationship_types = [ort],

			group_mode = alphabetical,

			label_singular = _("Ortsbezug"),
			label_plural = _("Ortsbezüge")
		},
		person = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_relationship_types = [person],
			show_hierarchy = 1,
			group_mode = hierarchical,

			label_singular = _("Personenbezug"),
			label_plural = _("Personenbezüge")
		},
		type_facet = {
			type = fieldList,
			field = type_id,

			group_mode = alphabetical,

			label_singular = _("type"),
			label_plural = _("types")
		},
	}
}

# --------------------------------------------------------------------

# Configuration for object lot = Konvolute browse
ca_object_lots = {
	name = _("Lots"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,
			table = ca_entities,
			relationship_table = ca_object_lots_x_entities,
			restrict_to_types = [],
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_object_lots_x_places,
			restrict_to_types = [],
			group_mode = alphabetical,
			label_singular = _("place"),
			label_plural = _("places")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_object_lots_x_collections,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("collection"),
			label_plural = _("collections")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_object_lots_x_occurrences,
			restrict_to_types = [],

			group_mode = alphabetical,

			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_object_lots_x_vocabulary_terms,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,

			group_mode = alphabetical,

			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,

			group_mode = alphabetical,

			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,

			group_mode = alphabetical,

			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}

# --------------------------------------------------------------------

# Configuration for entity browse
ca_entities = {
	name = _("Entities"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,

			group_mode = alphabetical,

			label_singular = _("Personentypen"),
			label_plural = _("Personentypen")
		},
	}
}

# --------------------------------------------------------------------

# Configuration for collection browse
ca_collections = {
	name = _("Sammlungen"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			group_mode = alphabetical,
			indefinite_article = an,
			label_singular = _("Sammlungen"),
			label_plural = _("Sammlungen")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("place"),
			label_plural = _("places")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [],

			group_mode = alphabetical,

			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,

			group_mode = alphabetical,

			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,

			group_mode = alphabetical,

			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,

			group_mode = alphabetical,

			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}

# --------------------------------------------------------------------

# Configuration for place browse
ca_places = {
	name = _("Places"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,
			table = ca_entities,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],

			group_mode = alphabetical,

			order_by_label_fields = [surname, forename, middlename],

			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		object_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("object"),
			label_plural = _("objects")
		},
		geo_facet = {
			type = fieldList,
			field = ca_places.georeference,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("Geo"),
			label_plural = _("Geo")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],

			group_mode = alphabetical,

			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_places_x_vocabulary_terms,
			restrict_to_types = [],

			group_mode = alphabetical,

			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,

			group_mode = alphabetical,

			label_singular = _("Ortstyp"),
			label_plural = _("Ortstypen")
		},
		#status_facet = {
		#	type = fieldList,
		#	field = status,
		#
		#	group_mode = alphabetical,
		#
		#	label_singular = _("status"),
		#	label_plural = _("statuses")
		#},
		#access_facet = {
		#	type = fieldList,
		#	field = access,
		#
		#	group_mode = alphabetical,
		#
		#	indefinite_article = an,
		#	label_singular = _("access status"),
		#	label_plural = _("access statuses")
		#}
	}
}

# --------------------------------------------------------------------
#
# Available Browse-Types
#
# --------------------------------------------------------------------
browseTypes = {
	objects = {
		displayName = _(Softwareobjekte),
		labelSingular = _("Softwareobjekt"),
 		labelPlural = _("Softwareobjekte"),
		table = ca_objects,
		#restrictToTypes = [softwareobject],
		views = {
			list = {},
			images = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	werke = {
		displayName = _(Werke),
		labelSingular = _("Werk"),
 		labelPlural = _("Werke"),
		table = ca_occurrences,
		restrictToTypes = [werk],
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
		# Bei Werken nur die List-View erlauben
        views = {
			list = {}
		},
        sortBy = {
	 		Relevance = _natural,
	 		Identifier = ca_occurrences.idno,
	 		Name = ca_occurrence_labels.name
	 	},
        sortDirection = {
			Identifier = asc,
			Name = desc
		},
	 	# --- sortControlType = dropdown or list
	 	sortControlType = dropdown
	 },
     werkeversionen = {
		displayName = _(Werkversionen),
		labelSingular = _("Werkversionen"),
 		labelPlural = _("Werkversionen"),
		table = ca_occurrences,
		restrictToTypes = [werkversion],
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
        views = {
			list = {}
		},
        sortBy = {
	 		Relevance = _natural,
	 		Identifier = ca_occurrences.idno,
	 		Name = ca_occurrence_labels.name
	 	},
        sortDirection = {
			Identifier = asc,
			Name = desc
		},
	 	# --- sortControlType = dropdown or list
	 	sortControlType = dropdown
	 },
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	}
}

# --- text for Browse menu item, default is "Browse"
browse_menu_button_text = Stöbern

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 0

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class = col-sm-10 col-md-9

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class = col-sm-2 col-md-3 col-lg-3
